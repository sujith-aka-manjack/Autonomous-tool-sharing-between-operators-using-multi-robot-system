<?xml version="1.0" ?>
<argos-configuration>

  <!-- ************************* -->
  <!-- * General configuration * -->
  <!-- ************************* -->
  <framework>
    <system threads="0" />
    <experiment length="600"
                ticks_per_second="10" />
  </framework>

  <!-- *************** -->
  <!-- * Controllers * -->
  <!-- *************** -->
  <controllers>

    <!-- Controllers that use SCT -->

    <leader_controller id="el"
                                        library="build/controllers/leader/libleader.so">
      <actuators>
        <differential_steering implementation="default" />
        <range_and_bearing implementation="default" />
        <leds implementation="default" medium="leds" />
      </actuators>
      <sensors>
        <proximity implementation="default" show_rays="false" />
        <range_and_bearing implementation="medium" medium="rab" show_rays="false" />
        <positioning implementation="default" />
      </sensors>
      <params>
        <wheel_turning hard_turn_angle_threshold="90"
                       soft_turn_angle_threshold="70"
                       no_turn_angle_threshold="10"
                       max_speed="6" />
        <waypoint_tracking target_angle="0"
                           kp="10"
                           ki="0"
                           kd="0" 
                           thres_range="0.1" />
        <team_flocking target_distance="15"
                       gain="1000"
                       exponent="2" />
        <team_distance min_leader_robot_distance="75"
                       separation_threshold="50" />
        <timeout send_message="4"
                 send_robot_delay="30" />
        <SCT path="src/SCT_models/leader_exchange.yaml" />
      </params>
    </leader_controller>

    <follower_controller id="ef"
                                        library="build/controllers/follower/libfollower.so">
      <actuators>
        <differential_steering implementation="default" />
        <range_and_bearing implementation="default" />
        <leds implementation="default" medium="leds" />
      </actuators>
      <sensors>
        <proximity implementation="default" show_rays="false" />
        <range_and_bearing implementation="medium"
                           medium="rab"
                           show_rays="false"/> 
      </sensors>
      <params>
        <wheel_turning hard_turn_angle_threshold="90"
                       soft_turn_angle_threshold="70"
                       no_turn_angle_threshold="10"
                       max_speed="8" />
        <team_flocking target_distance="15"
                       gain="1000"
                       exponent="2" />
        <team_distance separation_threshold="50"
                       joining_threshold="50" />
        <flocking_weights team="1"
                          robot="2"
                          obstacle="15" />
        <timeout send_message="4" 
                 wait_request="6" />
        <SCT path="src/SCT_models/follower_exchange.yaml" />
      </params>
    </follower_controller>

  </controllers>

  <!-- ****************** -->
  <!-- * Loop functions * -->
  <!-- ****************** -->
  <loop_functions library="build/loop_functions/leaderfollower_loop_functions/libleaderfollower_loop_functions"
                  label="experiment_loop_functions">

    <!-- Output path -->
    <output logging="true"
            out_path="results/user_study_scenario1_order1/"
            frame_grabbing="false" 
            camera_index="0" />

    <!-- Distribute leaders and followers. Leaders move towards waypoints. -->
    <!-- Currently only 1 leader supported per team -->
    <teams>
      <team leader_num="1" robot_num="10" center="-1.25, 2.5" density="0.3">
        <!-- <waypoint coord="0, 2.25" />
        <waypoint coord="1.5, 2.25" />
        <waypoint coord="1.5, -2.25" /> -->
      </team>
      <team leader_num="1" robot_num="10" center="-1.75, 2" density="0.3">
        <!-- <waypoint coord="-1.5, 0.75" />
        <waypoint coord="0, -0.75" />
        <waypoint coord="-1.5, -2.25" /> -->
      </team>
    </teams>

    <!-- Tasks that the teams must complete -->
    <tasks>
      <task position="1.5, 2.25" width="1" height="0.9" minimum_robot_num="8" maximum_robot_num="100" task_demand="500" />
      <!-- <task position="1.5, 0.75" width="1" height="0.9" minimum_robot_num=" 1" maximum_robot_num="100" task_demand="500" /> -->
      <!-- <task position="1.5, -0.75" width="1" height="0.9" minimum_robot_num=" 1" maximum_robot_num="100" task_demand="500" /> -->
      <task position="1.5, -2.25" width="1" height="0.9" minimum_robot_num="1" maximum_robot_num="100" task_demand="500" />
      <task position="0, 2.25" width="1" height="0.9" minimum_robot_num="1" maximum_robot_num="100" task_demand="500" />
      <!-- <task position="0, 0.75" width="1" height="0.9" minimum_robot_num=" 1" maximum_robot_num="100" task_demand="500" /> -->
      <task position="0, -0.75" width="1" height="0.9" minimum_robot_num=" 1" maximum_robot_num="100" task_demand="500" />
      <!-- <task position="0, -2.25" width="1" height="0.9" minimum_robot_num="1" maximum_robot_num="100" task_demand="500" /> -->
      <!-- <task position="-1.5, 2.25" width="1" height="0.9" minimum_robot_num="1" maximum_robot_num="100" task_demand="500" /> -->
      <task position="-1.5, 0.75" width="1" height="0.9" minimum_robot_num=" 1" maximum_robot_num="100" task_demand="500" />
      <!-- <task position="-1.5, -0.75" width="1" height="0.9" minimum_robot_num=" 1" maximum_robot_num="100" task_demand="500" /> -->
      <task position="-1.5, -2.25" width="1" height="0.9" minimum_robot_num="1" maximum_robot_num="100" task_demand="500" />
    </tasks>
  </loop_functions>

  <!-- *********************** -->
  <!-- * Arena configuration * -->
  <!-- *********************** -->
  <arena size="6, 7.5, 1" center="0,0,0.5">

    <floor id="floor"
           source="loop_functions"
           pixels_per_meter="50" />

    <box id="wall_west" size="4.9,0.1,0.5" movable="false">
      <body position="0,3.25,0" orientation="0,0,0" />
    </box>
    <box id="wall_east" size="4.9,0.1,0.5" movable="false">
      <body position="0,-3.25,0" orientation="0,0,0" />
    </box>
    <box id="wall_north" size="0.1,6.6,0.5" movable="false">
      <body position="2.5,0,0" orientation="0,0,0" />
    </box>
    <box id="wall_south" size="0.1,6.6,0.5" movable="false">
      <body position="-2.5,0,0" orientation="0,0,0" />
    </box>

  </arena>

  <!-- ******************* -->
  <!-- * Physics engines * -->
  <!-- ******************* -->
  <physics_engines>
    <dynamics2d id="dyn2d" />
  </physics_engines>

  <!-- ********* -->
  <!-- * Media * -->
  <!-- ********* -->
  <media>
    <range_and_bearing id="rab" check_occlusions="false"/>
    <led id="leds" />
  </media>

  <!-- ****************** -->
  <!-- * Visualization * -->
  <!-- ****************** -->
  <!--
        This shows how to add customized key management
        using the qt user functions.
        Check 'argos3 -q qt-opengl' for more help.
    -->
  <visualization>
    <!--
       defaults to 
       <webviz port=3000
         broadcast_frequency=10
         ff_draw_frames_every=2
         autoplay="true"
         ssl_key_file="NULL"
         ssl_cert_file="NULL"
         ssl_ca_file="NULL"
         ssl_dh_params_file="NULL"
         ssl_cert_passphrase="NULL"
        />

        Where 

        `port(unsigned short)`: is the network port to listen incoming 
            traffic on (Websockets and HTTP both share the same port)
        Default: 3000
        Range: [1,65535]

        Note: Ports less < 1024 need root privileges.

        
        `broadcast_frequency(unsigned short)`: Frequency (in Hertz) at 
            which to broadcast the updates(through websockets)
        Default: 10
        Range: [1,1000]
        

        `ff_draw_frames_every(unsigned short)`: Number of steps to 
            skip when in fast forward mode
        Default: 2
        

        `autoplay(bool)`: Allows user to auto-play the simulation at 
            startup
        Default: false
        
      -->
    <webviz>
      <user_functions library="build/loop_functions/leaderfollower_loop_functions/libleaderfollower_loop_functions" 
                      label="manualcontrol_webvizuser_functions" />
    </webviz>

    <!-- <qt-opengl autoplay="false">

      <frame_grabbing directory="frames"
                      base_name="frame_"
                      format="png"
                      quality="100"
                      headless_grabbing="false"
                      headless_frame_size="1600x1200"
                      headless_frame_rate="1"/>

      <user_functions library="build/loop_functions/leaderfollower_loop_functions/libleaderfollower_loop_functions"
                      label="manualcontrol_qtuser_functions" />

      <camera>
        <placements>
          <placement index="2" position="-1.13679,0.00582551,2.45548" look_at="-0.704207,0.00502653,1.55389" up="0.901591,-0.00166523,0.432586" lens_focal_length="50" />
          <placement index="1" position="-1.67387,-0.0881827,2.71917" look_at="-1.24128,-0.0889817,1.81758" up="0.901591,-0.00166523,0.432586" lens_focal_length="20" />
          <placement index="3" position="0,0,13" look_at="0,0,0" up="1,0,0" lens_focal_length="65" />
          <placement index="4" position="0,-0.146444,10.092" look_at="0,-0.146444,9.09204" up="1,0,0" lens_focal_length="65" />
          <placement index="0" position="0,0,10.5" look_at="0,0,0" up="0,1,0" lens_focal_length="65" />
        </placements>
      </camera>

    </qt-opengl> -->
  </visualization>

</argos-configuration>
